Brotea Florin-Alexandru, 324CA
Pentru taskul 1, am initializat o matrice mat de dimensiuni n x m(pe care am si alocat-o dinamic 
corespunzator). Ulterior, valorile din coloana c data le-am salvat intr-o matrice temporara, numita 
tmp, pentru ca am vrut sa evit posibilele suprascrieri in matricea mat. Valorile rotite sunt copiate
din tmp inapoi in matrice, indiferent de numarul r de rotiri care este solicitat, cu ajutorul liniei
32 scrisa de mine in cod, care ia pozitia i + r cu modulo n pentru a se face corect si miscarea
circulara in cazul unui r suficient de mare. La final, afisez matricea rezultata in urma rotirii, si,
in acelasi timp, realizez si eliberarea de memorie.

La taskul 2, citesc o matrice mat si o aloc la fel cum am facut si la primul task, dupa care imi declar
variabile pentru ceea ce ma intereseaza: nr_comb - numarul combinatiilor castigatoare, score - scorul
care va fi afisat in urma acestor combinatii si nr_sym - numarul simbolurilor, care ma va ajuta pentru
a calcula scorul corect conform cerintei date. Desigur, fiind variabile ce vor creste in functie de
conditia realizarii scorului, le-am initializat pe toate cu 0. Apoi, am folosit *dist si alocarea cu
calloc pentru a initializa si crea un vecotr care urmareste simbolurile distincte(intre 0 si 9) din
matrice. Fac un for si initializez variabilele care ma intereseaza in vederea aflarii secventei maxime
posibile ca si lungime, dar folosesc si una pentru a parcurge secventa curenta. Cresc secventa curenta
daca un numar de pe matrice e egal cu vecinul sau, fac la fel pentru toate liniile de pe matrice si, in
functie de ce obtin, aflu si care e secventa maxima ca si lungime. Stiu ca daca am peste 3 numere identice
unul langa altul pe linie sau pe diagonala, cresc nr_comb. Dupa, pentru partea a doua a taskului, ma
intereseaza sa vad ce se intampla pe cele 2 diagonale ale matricii. Pe langa cresterea numarului de
combinatii pentru prima parte, am tratat ambele cazuri ale cerintei in care scorul se va creste: cel cu
simbolul 7, dar si cel cu nr_sym <= 4. Nu am uitat de eliberare la final.

Pentru taskul 4, la fel, am citit si am alocat o matrice mat. Ma intereseaza sa aflu scorul maxim posibil,
dar ca sa ma ajute, am declarat si max_sym si o variabila temporara max_possible_sym, pentru a vedea care
e numarul maxim posibil care poate fi introdus astfel incat sa obtin scorul maxim posibil. Am tratat, de
asemenea, si cazul pentru bucle, de aceea am facut acel for cu new_sym si init_sym cu continue. Daca simbolul
curent este acelasi cu simbolul initial, atunci il ignoram si mergem mai departe. Se creeaza o copie a matricei
mat, new_mat, tot pentru a evita suprascrierea, ca in taskul 1. Daca era cazul, am modificat simbolul de pe
pozitia [i][j] doar in new_mat, fara sa afectez mat. Pentru a determina scorul maxim, se compara scorul cu
scorul maxim curent si aflu dupa aceasta comparatie scorul maxim posibil si, in final, eliberez memoria, asa
cum am facut si la celelalte taskuri.